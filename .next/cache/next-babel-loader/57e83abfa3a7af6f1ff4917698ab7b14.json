{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Контент страницы с сообщениями\nimport { useReducer, useEffect } from 'react';\nimport sendAjax from '../../Function/sendAjax';\nimport useModal from '../OtherComponents/useModal';\nimport Message from '../OtherComponents/Message';\nconst initialState = {\n  curentPage: 1,\n  messages: [],\n  countPage: 1,\n  countMessagesOnePage: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_MESSAGE_FROM_SERVER':\n      {\n        return _objectSpread({}, action.value);\n      }\n\n    case 'SET_CURENT_PAGE':\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nconst ContentMessages = () => {\n  const [Modal, open] = useModal(Message);\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n\n  const getOneMessageFromServer = id => {\n    const query = sendAjax('/getmessage', {\n      id\n    });\n    query.subscribe(response => {\n      if (response.status === 200) {\n        console.log('Messages: ', id);\n        open({\n          head: `От:${response.response.autor}`,\n          text: response.response.message,\n          ulData: [response.response.date, response.response.autor]\n        });\n      }\n    });\n  };\n\n  const getMessagesFromServer = numPage => {\n    const query = sendAjax('/getmessages', {\n      numberPage: numPage - 1\n    });\n    query.subscribe(response => {\n      if (response.status === 200) {\n        const data = JSON.parse(response.response);\n        const count = data.count / data.countMessagesOnePage;\n        dispatch({\n          type: 'GET_MESSAGE_FROM_SERVER',\n          value: {\n            countPage: count > Math.floor(count) ? Math.floor(count) + 1 : Math.floor(count),\n            countMessagesOnePage: data.countMessagesOnePage,\n            messages: data.messages,\n            curentPage: numPage\n          }\n        });\n      }\n    }, () => {});\n  };\n\n  useEffect(() => {\n    getMessagesFromServer(1);\n  }, []);\n\n  const setPage = numPage => {\n    getMessagesFromServer(numPage);\n  };\n\n  const upPage = () => {\n    getMessagesFromServer(state.curentPage + 1);\n  };\n\n  const downPage = () => {\n    getMessagesFromServer(state.curentPage - 1);\n  };\n\n  const buttonUp = state.curentPage === state.countPage ? null : __jsx(React.Fragment, null, __jsx(Modal, {\n    className: \"jsx-3128519326\"\n  }), __jsx(\"div\", {\n    onClick: upPage,\n    className: \"jsx-3128519326\" + \" \" + \"btnFlip\"\n  }, \"+\"), __jsx(_JSXStyle, {\n    id: \"3128519326\"\n  }, [\".btnFlip.jsx-3128519326{display:inline-block;background:#65e841;width:22px;height:22px;margin:0 10px 0 10px;border:1px solid black;}\"]));\n  const buttonDown = state.curentPage === 1 ? null : __jsx(React.Fragment, null, __jsx(\"div\", {\n    onClick: downPage,\n    className: \"jsx-3128519326\" + \" \" + \"btnFlip\"\n  }, \"-\"), __jsx(_JSXStyle, {\n    id: \"3128519326\"\n  }, [\".btnFlip.jsx-3128519326{display:inline-block;background:#65e841;width:22px;height:22px;margin:0 10px 0 10px;border:1px solid black;}\"]));\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    className: \"jsx-2894175130\"\n  }, \"\\u0412\\u0441\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"), __jsx(\"div\", {\n    className: \"jsx-2894175130\" + \" \" + \"flipper\"\n  }, __jsx(\"p\", {\n    className: \"jsx-2894175130\"\n  }, buttonDown, __jsx(\"input\", {\n    type: \"text\",\n    value: state.curentPage,\n    onChange: ({\n      target: {\n        value\n      }\n    }) => setPage(value),\n    className: \"jsx-2894175130\"\n  }), ' ', \"/\", ' ', state.countPage, buttonUp)), __jsx(\"table\", {\n    className: \"jsx-2894175130\" + \" \" + \"tebleMessages\"\n  }, __jsx(\"tr\", {\n    className: \"jsx-2894175130\"\n  }, __jsx(\"th\", {\n    className: \"jsx-2894175130\"\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\"), __jsx(\"th\", {\n    className: \"jsx-2894175130\"\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u043D\\u044B\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(\"th\", {\n    className: \"jsx-2894175130\"\n  }, \"\\u0414\\u0430\\u0442\\u0430\")), state.messages.map(item => __jsx(\"tr\", {\n    onClick: () => getOneMessageFromServer.bind(this, item.id),\n    className: \"jsx-2894175130\" + \" \" + ((!item.readed ? 'noReaded' : '') || \"\")\n  }, __jsx(\"td\", {\n    className: \"jsx-2894175130\"\n  }, item.autor), __jsx(\"td\", {\n    className: \"jsx-2894175130\"\n  }, item.adress), __jsx(\"td\", {\n    className: \"jsx-2894175130\"\n  }, item.date, __jsx(\"div\", {\n    onClick: () => {},\n    idMessage: item.id,\n    className: \"jsx-2894175130\" + \" \" + \"ButtonDelete\"\n  }))))), __jsx(_JSXStyle, {\n    id: \"2894175130\"\n  }, [\".tebleMessages.jsx-2894175130{width:90%;margin:0 auto;}\", \".tebleMessages.jsx-2894175130 td.jsx-2894175130,.tebleMessages.jsx-2894175130 th.jsx-2894175130{border:1px solid black;text-align:center;}\", \".noReaded.jsx-2894175130{font-weight:bold;}\", \".flipper.jsx-2894175130 input.jsx-2894175130{width:40px;}\"]));\n};\n\nexport default ContentMessages;","map":null,"metadata":{},"sourceType":"module"}