{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Model from './Model';\nimport InitialState from './InitialState';\n\nconst reducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case Model.SET_MESSAGE_SHOWING:\n      return _objectSpread({}, state, {\n        messageShowing: action.value,\n        messageText: 'action.text',\n        messageHead: action.head,\n        messageUlData: action.ulData\n      });\n\n    case Model.SET_MESSAGE_TEXT:\n      return _objectSpread({}, state, {\n        messageText: action.value\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/set/Projects/resume_2/Store/Redecer.js"],"names":["Model","InitialState","reducer","state","action","type","SET_MESSAGE_SHOWING","messageShowing","value","messageText","messageHead","head","messageUlData","ulData","SET_MESSAGE_TEXT"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,mBAAX;AACE,+BACKH,KADL;AAEEI,QAAAA,cAAc,EAAEH,MAAM,CAACI,KAFzB;AAGEC,QAAAA,WAAW,EAAE,aAHf;AAIEC,QAAAA,WAAW,EAAEN,MAAM,CAACO,IAJtB;AAKEC,QAAAA,aAAa,EAAER,MAAM,CAACS;AALxB;;AAOF,SAAKb,KAAK,CAACc,gBAAX;AACE,+BAAYX,KAAZ;AAAmBM,QAAAA,WAAW,EAAEL,MAAM,CAACI;AAAvC;;AACF;AACE,aAAOL,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import Model from './Model';\nimport InitialState from './InitialState';\n\nconst reducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case Model.SET_MESSAGE_SHOWING:\n      return {\n        ...state,\n        messageShowing: action.value,\n        messageText: 'action.text',\n        messageHead: action.head,\n        messageUlData: action.ulData,\n      };\n    case Model.SET_MESSAGE_TEXT:\n      return { ...state, messageText: action.value };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}